{{- /*gotype: wagen.hugpoint.tech.Protocols*/ -}}
// !!! THIS FILE IS GENERATED WITH WAGEN !!!
// !!! DO NOT MODIFY THIS FILE MANUALLY, EDIT TEMPLATE INSTEAD !!!
use crate::types::events::*;
use crate::connection::WaylandConnection;

#[allow(unused)]
pub trait EventHandler{
{{- range $protocol := . }}
{{- range $interface := $protocol.Interfaces }}
{{- range $req := $interface.Requests }}
{{- range $arg := $req.Args }}
{{- if and (eq $arg.Type "new_id") (eq $arg.Interface "wl_callback") }}
    fn on_{{ $interface.Name }}_{{ $req.Name }}_done(&mut self, event: {{ ToPascal $interface.Name $req.Name "done" }}Event, connection: &WaylandConnection) {}
{{ break }}
{{- end  }}
{{- end }}
{{- end }}

{{- if $interface.Events  }}
{{- if eq $interface.Name "wl_callback" }}{{- continue }}{{- else }}
{{- range $event := $interface.Events }}
    fn on_{{ $interface.Name }}_{{ $event.Name }}(&mut self, event: {{ ToPascal $interface.Name $event.Name }}Event, connection: &WaylandConnection) {}
{{ end }}
{{- end  }}
{{- end  }}
{{- end }}
{{- end }}
}

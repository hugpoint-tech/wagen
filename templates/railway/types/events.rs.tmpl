// !!! THIS FILE IS GENERATED WITH WAGEN !!!
// !!! DO NOT MODIFY THIS FILE MANUALLY, EDIT TEMPLATE INSTEAD !!!
#[allow(dead_code)]

use crate::types::Fixed;
use crate::types::enums;

{{- range $protocol := . }}
{{- range $interface := $protocol.Interfaces }}
{{- range $req := $interface.Requests }}
{{- range $arg := $req.Args }}
{{- if and (eq $arg.Type "new_id") (eq $arg.Interface "wl_callback") }}
/// Callback event
#[derive(Debug)]
pub struct {{ ToPascal $interface.Name $req.Name }}DoneEvent{
    /// id of the object the event came from
    pub source_id: u32,
    /// event specific data
    pub data: u32,
}
{{ break }}
{{- end  }}
{{- end }}
{{- end }}

{{- range $event := $interface.Events }}
{{- range $line := ToLines $event.Description }}
/// {{ Trim $line }}
{{- end }}
#[derive(Debug)]
pub struct {{ ToPascal $interface.Name $event.Name }}Event {
    /// {{$interface.Name}}:{{$event.Name}} event
    /// id of the object the event came from
    pub source_id: u32,
    {{- range $arg := $event.Args }}
    {{- if $arg.Summary }}
    /// {{ $arg.Summary }}
    {{- end }}
    {{- if $arg.Description }}
    {{- range $line := ToLines $arg.Description }}
    /// {{ Trim $line }}
    {{- end }}
    {{- end }}
    {{- if eq $arg.Type "int"}}
    {{- if and $arg.Enum (Contains $arg.Enum ".") }}
    pub {{ $arg.Name }}: enums::{{ ToPascal $arg.Enum }},
	{{- end }}
    {{- if and $arg.Enum (not (Contains $arg.Enum "." )) }}
    pub {{ $arg.Name }}: enums::{{ ToPascal $interface.Name $arg.Enum }},
    {{- end }}
    {{- if not $arg.Enum }}
    pub {{ $arg.Name }}: i32,
	{{- end }}
    {{- end }}
    {{- if eq $arg.Type "uint"}}
    {{- if and $arg.Enum (Contains $arg.Enum ".") }}
    pub {{ $arg.Name }}: enums::{{ ToPascal $arg.Enum }},
	{{- end }}
    {{- if and $arg.Enum (not (Contains $arg.Enum ".") ) }}
    pub {{ $arg.Name }}: enums::{{ ToPascal $interface.Name $arg.Enum }},
	{{- end }}
    {{- if not $arg.Enum }}
    pub {{ $arg.Name }}: u32,
	{{- end }}
    {{- end }}
    {{- if eq $arg.Type "string"}}
    pub {{ $arg.Name }}: String,
	{{- end }}
    {{- if eq $arg.Type "fd"}}
    pub {{ $arg.Name }}: std::os::fd::RawFd,
    {{- end }}
    {{- if eq $arg.Type "object"}}
    pub {{ $arg.Name }}: u32,
    {{- end }}
    {{- if eq $arg.Type "fixed"}}
    pub {{ $arg.Name }}: Fixed,
    {{- end }}
    {{- if eq $arg.Type "array"}}
    pub {{ $arg.Name }}: Vec<u8>,
    {{- end }}
    {{- if eq $arg.Type "new_id"}}
    // new_id
    pub {{ $arg.Name }}: u32,
    {{- end }}
    {{- end }}
}
{{ end }}
{{- end }}
{{- end }}
